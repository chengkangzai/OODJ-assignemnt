/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Admin;

import Model.User.DeliveryStaff;
import Model.User.ManagingStaff;
import Model.User.User;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ashwe
 */
public class StaffDirectory extends javax.swing.JFrame {

    /**
     * Creates new form StaffDirectory
     */
    public StaffDirectory() {
        initComponents();
        this.initTable();
    }

    private void initTable() {
        ArrayList<User> users = new User().all();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //lamda expression... cool right hahah
        users.forEach((user) -> {
            switch (user.getRole()) {
                case "admin": {
                    ManagingStaff staff = new ManagingStaff().where("user_id", String.valueOf(user.getId()));
                    model.addRow(new Object[]{
                        user.getId(),
                        user.getName(),
                        user.getEmail(),
                        user.getRole(),
                        staff.getSalary(),
                        staff.getPosition()
                    });
                    break;
                }
                case "delivery": {
                    DeliveryStaff staff = new DeliveryStaff().where("user_id", String.valueOf(user.getId()));
                    model.addRow(new Object[]{
                        user.getId(),
                        user.getName(),
                        user.getEmail(),
                        user.getRole(),
                        staff.getSalary(),
                        "",
                        staff.getCarPlate(),
                        staff.getPhoneNumber()
                    });
                    break;
                }
                default:
                    //Just Incase
                    model.addRow(new Object[]{
                        user.getId(),
                        user.getName(),
                        user.getEmail(),
                        user.getRole()
                    });
                    break;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email", "Role", "Salary", "Position", "Car Plate", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Reset Password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        String id = model.getValueAt(selectedRow, 0).toString();
        User user = new User().where("id", id);
        if (user.resetPassword()) {
            JOptionPane.showMessageDialog(null, "Password Reseted !");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        System.out.println("Hi");
        boolean status = true;

        for (int i = 0; i < model.getRowCount(); i++) {
            String role = model.getValueAt(i, 3).toString();
            String userId = model.getValueAt(i, 0).toString();

            User u = new User().where("id", userId);
            String name = model.getValueAt(i, 1).toString();
            String email = model.getValueAt(i, 2).toString();
            u.setEmail(email);
            u.setName(name);
            u.setRole(role);
            if (!u.update()) {
                status = false;
            }

            String salary = model.getValueAt(i, 4).toString();
            switch (role) {
                case "admin":
                    ManagingStaff mStaff = new ManagingStaff().where("user_id", userId);
                    String position = model.getValueAt(i, 5).toString();
                    System.out.println(mStaff.getPosition());
                    System.out.println(mStaff.getSalary());
                    mStaff.setSalary(Double.valueOf(salary));
                    mStaff.setPosition(position);
                    mStaff.update();
                    if (!mStaff.update()) {
                        status = false;
                    }
                    break;
                case "delivery":
                    DeliveryStaff dStaff = new DeliveryStaff().where("user_id", userId);
                    String carPlate = model.getValueAt(i, 6).toString();
                    String phoneNumber = model.getValueAt(i, 7).toString();
                    dStaff.setCarPlate(carPlate);
                    dStaff.setPhoneNumber(phoneNumber);
                    dStaff.setSalary(Double.valueOf(salary));
                    dStaff.update();
                    if (!dStaff.update()) {
                        status = false;
                    }
                    break;
                default:
                    break;
            }
        }
        
        if (status) {
            JOptionPane.showMessageDialog(null, "Udpated");
        } else {
            JOptionPane.showMessageDialog(null, "No");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffDirectory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
